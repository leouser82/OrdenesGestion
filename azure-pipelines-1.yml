trigger:
  branches:
    include:
      - main

pool:
  name: LeonelAgent

variables:
  organization: 'leonel820906'
  project: 'GestionOrdenes'
  pipelineId: '2'  # ID del pipeline que genera el artefacto
  azureSubscription: 'FinancierosGR-Connection'
  appName: 'GestionOrdenes'

steps:
- checkout: self
  displayName: 'Checkout source code'

- powershell: |
    $organization = "$(organization)"
    $project = "$(project)"
    $pipelineId = "$(pipelineId)"
    $uri = "https://dev.azure.com/$organization/$project/_apis/build/builds?definitions=$pipelineId&statusFilter=completed&resultFilter=succeeded&top=1&api-version=7.1-preview.7"

    Write-Host "URI construida: $uri"

    $headers = @{
      Authorization = "Bearer $(System.AccessToken)"
    }

    try {
      $response = Invoke-RestMethod -Uri $uri -Headers $headers -Method Get
      if ($response.count -eq 0) {
        Write-Error "No se encontró ningún build exitoso para el pipeline ID $pipelineId"
        exit 1
      }

      $buildVersion = $response.value[0].buildNumber
      Write-Host "Último build exitoso: $buildVersion"
      Write-Host "##vso[task.setvariable variable=buildVersion]$buildVersion"
    } catch {
      Write-Error "Error al consultar el build: $_"
      exit 1
    }
  displayName: 'Obtener último build exitoso'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '$(project)'
    definition: '$(pipelineId)'
    buildVersion: '$(buildVersion)'
    artifactName: 'drop'
    targetPath: '$(Pipeline.Workspace)/drop'
  displayName: 'Descargar artefacto del último build exitoso'

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webApp'
    appName: '$(appName)'
    package: '$(Pipeline.Workspace)/drop/**/*.zip'
  displayName: 'Desplegar a Azure App Service'